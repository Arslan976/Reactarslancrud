{"version":3,"sources":["components/Navbar/Navbar.js","store/actions/auth.action.js","components/Main/Main.js","store/actions/item.actions.js","components/Login/Login.js","components/Register/Register.js","store/actions/register.action.js","components/App.js","store/reducers/item.reducer.js","store/reducers/auth.reducer.js","store/reducer.js","serviceWorker.js","index.js"],"names":["Navbar","dispatch","useDispatch","userData","useSelector","authReducer","isAuth","localStorage","getItem","style","height","width","display","justifyContent","padding","name","Button","variant","color","onClick","a","async","removeItem","type","to","Main","props","useState","setName","data","itemReducer","items","loading","useEffect","axios","get","console","log","payload","Grid","container","direction","justify","alignItems","TextField","value","onChange","e","target","label","marginTop","getState","body","itemName","post","headers","token","res","Actions","Paper","textAlign","Table","TableHead","TableRow","TableCell","TableBody","map","index","key","_id","date","format","IconButton","Delete","fontSize","id","delete","Login","useForm","mode","handleSubmit","errors","register","keepLogin","setKeepLogin","ErrorMsg","setErrorMsg","errorFrombackend","errormsg","flexDirection","onSubmit","setItem","history","push","response","msg","inputRef","required","pattern","message","email","margin","password","FormControlLabel","control","Checkbox","checked","Register","registerReducer","App","path","exact","render","initialState","isLoading","state","action","filter","x","user","combineReducers","tokenReducer","Boolean","window","location","hostname","match","store","createStore","reducer","compose","applyMiddleware","thunk","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.158717d0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport * as Actions from \"../../store/actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nexport const Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector(({ authReducer }) => authReducer.userData);\r\n  const isAuth = useSelector(({ authReducer }) => authReducer.isAuth);\r\n  let token = localStorage.getItem(\"token\");\r\n\r\n  function logout() {\r\n    dispatch(Actions.logout());\r\n  }\r\n\r\n  return (\r\n    <nav\r\n      style={{\r\n        height: \"100px\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        padding: \"0 50px\"\r\n      }}\r\n    >\r\n      <h1>{userData ? userData.name : \"Please Login\"}</h1>\r\n\r\n      {isAuth ? (\r\n        <ul>\r\n          <li>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={logout}>\r\n              Logout\r\n            </Button>\r\n          </li>\r\n        </ul>\r\n      ) : (\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/login\">Login</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/register\">Register</Link>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { history } from \"../../index\";\r\nimport { Redirect } from \"react-router\";\r\nimport * as Actions from \"../../store/actions\";\r\n\r\nexport const LOGIN_PROCESS = \"LOGIN_PROCESS\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const LOADING_ACTION = \"LOADING_ACTION\";\r\nexport const LOGOUT_ACTION = \"LOGOUT_ACTION\";\r\nexport const KEEP_ME_LOGGED = \"KEEP_ME_LOGGED\";\r\n\r\nexport const loginLoader = () => dispatch => {\r\n  dispatch({\r\n    type: LOADING_ACTION\r\n  });\r\n};\r\n\r\nexport const login = (e, keepLogin) => async dispatch => {\r\n  dispatch(loginLoader());\r\n  dispatch({\r\n    type: LOGIN_ERROR,\r\n    payload: null\r\n  });\r\n  try {\r\n    let res = await axios.post(\r\n      \"https://assignmentforoffice.herokuapp.com/api/auth\",\r\n      e\r\n    );\r\n    console.log(res);\r\n    dispatch({\r\n      type: LOGIN_PROCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    keepLogin && localStorage.setItem(\"token\", res.data.token);\r\n    history.push(\"/\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_ERROR,\r\n      payload: error.response.data.msg\r\n    });\r\n  }\r\n  dispatch(loginLoader());\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n  localStorage.removeItem(\"token\");\r\n  dispatch({\r\n    type: LOGOUT_ACTION\r\n  });\r\n};\r\n\r\nexport const loggedIn = () => async dispatch => {\r\n  dispatch(loginLoader());\r\n  let res = await axios.get(\r\n    \"https://assignmentforoffice.herokuapp.com/api/auth/user\",\r\n    {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": localStorage.getItem(\"token\")\r\n      }\r\n    }\r\n  );\r\n  console.log(res);\r\n  dispatch({\r\n    type: KEEP_ME_LOGGED,\r\n    payload: res.data\r\n  });\r\n  dispatch(loginLoader());\r\n};\r\n","import React, { useEffect, Fragment, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as Actions from \"../../store/actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  TableHead,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  IconButton,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst Main = props => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const data = useSelector(({ itemReducer }) => itemReducer.items);\r\n  const loading = useSelector(({ itemReducer }) => itemReducer.loading);\r\n  const isAuth = useSelector(({ authReducer }) => authReducer.isAuth);\r\n\r\n  useEffect(() => {\r\n    !data && dispatch(Actions.getItems());\r\n  }, [dispatch]);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return loading ? (\r\n    <h1>Loading.......</h1>\r\n  ) : (\r\n    <Fragment>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <TextField\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n          label=\"Add Item\"\r\n          variant=\"outlined\"\r\n        />\r\n        <Button\r\n          style={{ marginTop: 10 }}\r\n          onClick={() => dispatch(Actions.addItem(name))}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Add\r\n        </Button>\r\n      </Grid>\r\n      <Paper>\r\n        <h1 style={{ textAlign: \"center\" }}>My Items</h1>\r\n\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Index</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Delete</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {data &&\r\n              data.map((value, index) => {\r\n                return (\r\n                  <TableRow key={value._id}>\r\n                    <TableCell>{index + 1}</TableCell>\r\n                    <TableCell>{value.name}</TableCell>\r\n                    <TableCell>\r\n                      <Moment date={value.date} format=\"YYYY/MM/DD\" />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <IconButton>\r\n                        <Delete\r\n                          color=\"primary\"\r\n                          fontSize=\"large\"\r\n                          onClick={() => {\r\n                            dispatch(Actions.deleteItem(value._id));\r\n                          }}\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Main;\r\n","import axios from \"axios\";\r\n\r\nexport const GET_DATA = \"GET_DATA\";\r\nexport const DELETE_ITEM = \"DELETE_ITEM\";\r\nexport const ADD_ITEM = \"ADD_ITEM\";\r\n\r\nexport const getItems = () => async dispatch => {\r\n  let items = await axios.get(\r\n    \"https://assignmentforoffice.herokuapp.com/api/items\"\r\n  );\r\n  console.log(items);\r\n\r\n  dispatch({\r\n    type: GET_DATA,\r\n    payload: items.data\r\n  });\r\n};\r\n\r\nexport const deleteItem = id => async (dispatch, getState) => {\r\n  let delRes = await axios.delete(\r\n    `https://assignmentforoffice.herokuapp.com/api/items/${id}`,\r\n    {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": getState().authReducer.token\r\n      }\r\n    }\r\n  );\r\n  console.log(\"token\", getState().authReducer.token);\r\n\r\n  dispatch({\r\n    type: DELETE_ITEM,\r\n    payload: id\r\n  });\r\n};\r\n\r\nexport const addItem = name => async (dispatch, getState) => {\r\n  const body = {\r\n    itemName: name\r\n  };\r\n\r\n  let res = await axios.post(\r\n    \"https://assignmentforoffice.herokuapp.com/api/items\",\r\n    body,\r\n    {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": getState().authReducer.token\r\n      }\r\n    }\r\n  );\r\n  console.log(res);\r\n\r\n  dispatch({\r\n    type: ADD_ITEM,\r\n    payload: res.data\r\n  });\r\n};\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport * as Actions from \"../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const Login = props => {\r\n  const dispatch = useDispatch();\r\n  const { handleSubmit, errors, register } = useForm({\r\n    mode: \"onChange\"\r\n  });\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [keepLogin, setKeepLogin] = useState(false);\r\n  const [ErrorMsg, setErrorMsg] = useState(null);\r\n\r\n  const errorFrombackend = useSelector(\r\n    ({ authReducer }) => authReducer.errormsg\r\n  );\r\n  const user = useSelector(({ authReducer }) => authReducer.userData);\r\n  const loading = useSelector(({ authReducer }) => authReducer.loading);\r\n  const isAuth = useSelector(({ authReducer }) => authReducer.isAuth);\r\n\r\n  useEffect(() => {\r\n    errorFrombackend && setErrorMsg(errorFrombackend);\r\n  }, [errorFrombackend]);\r\n\r\n  if (isAuth) {\r\n    return <Redirect to=\"/main\" />;\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"500px\",\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n      }}\r\n    >\r\n      {loading ? (\r\n        <h1>Loading ...</h1>\r\n      ) : (\r\n        <Fragment>\r\n          <h1>Login</h1>\r\n          {ErrorMsg && <p style={{ color: \"red\" }}>{ErrorMsg}</p>}\r\n          <form\r\n            onSubmit={handleSubmit(value =>\r\n              dispatch(Actions.login(value, keepLogin))\r\n            )}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <TextField\r\n                name=\"email\"\r\n                inputRef={register({\r\n                  required: \"This Field is Requried\",\r\n                  pattern: {\r\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                    message: \"Invalid email address\"\r\n                  }\r\n                })}\r\n                label=\"Enter Email Address\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n              />\r\n              {errors.email && <p> {errors.email.message}</p>}\r\n              <TextField\r\n                name=\"password\"\r\n                inputRef={register({\r\n                  required: \"This Field is Requried\"\r\n                })}\r\n                style={{ margin: \"20px 0\" }}\r\n                label=\"Enter Password\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                type=\"password\"\r\n              />\r\n              {errors.password && <p> {errors.password.message}</p>}\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={keepLogin}\r\n                    value=\"checkedB\"\r\n                    color=\"primary\"\r\n                    onChange={() => setKeepLogin(!keepLogin)}\r\n                  />\r\n                }\r\n                label=\"Keep me Login\"\r\n              />\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Login\r\n              </Button>\r\n            </Grid>\r\n          </form>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as Actions from \"../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nexport const Register = props => {\r\n  const dispatch = useDispatch();\r\n  const { handleSubmit, errors, register } = useForm({\r\n    mode: \"onChange\"\r\n  });\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [ErrorMsg, setErrorMsg] = useState(null);\r\n\r\n  const errorFrombackend = useSelector(\r\n    ({ registerReducer }) => registerReducer.errormsg\r\n  );\r\n  const user = useSelector(({ registerReducer }) => registerReducer.userData);\r\n  const loading = useSelector(({ registerReducer }) => registerReducer.loading);\r\n  const isAuth = useSelector(({ authReducer }) => authReducer.isAuth);\r\n\r\n  useEffect(() => {\r\n    errorFrombackend && setErrorMsg(errorFrombackend);\r\n  }, [errorFrombackend]);\r\n\r\n  if (isAuth) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <section>\r\n        <h1>Loading..........</h1>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"500px\",\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n      }}\r\n    >\r\n      {/* {loading ? (\r\n        <h1>Loading ...</h1>\r\n      ) : ( */}\r\n      <Fragment>\r\n        <h1>Register</h1>\r\n        {ErrorMsg && <p style={{ color: \"red\" }}>{ErrorMsg}</p>}\r\n        <form\r\n          onSubmit={handleSubmit(value => dispatch(Actions.register(value)))}\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <TextField\r\n              style={{ margin: 10 }}\r\n              name=\"name\"\r\n              inputRef={register({\r\n                required: \"This Field is Requried\",\r\n                pattern: {\r\n                  value: /[a-zA-Z][a-zA-Z0-9-_]{3,32}/,\r\n                  message: \"Invalid Name\"\r\n                }\r\n              })}\r\n              label=\"Enter Username\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            />\r\n            {errors.name && <p>{errors.name.message}</p>}\r\n            <TextField\r\n              style={{ margin: 10 }}\r\n              name=\"email\"\r\n              inputRef={register({\r\n                required: \"This Field is Requried\",\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                  message: \"Invalid email address\"\r\n                }\r\n              })}\r\n              label=\"Enter Email Address\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            />\r\n            {errors.email && <p>{errors.email.message}</p>}\r\n            <TextField\r\n              style={{ margin: 10 }}\r\n              name=\"password\"\r\n              inputRef={register({\r\n                required: \"This Field is Requried\"\r\n              })}\r\n              label=\"Enter Password\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              type=\"password\"\r\n            />\r\n            <Button\r\n              style={{ margin: 10 }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Register\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Fragment>\r\n      {/* )} */}\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport { history } from \"../../index\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nexport const REGISTER_PROCESS = \"REGISTER_PROCESS\";\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\r\nexport const REGISTER_LOADING_ACTION = \"REGISTER_LOADING_ACTION\";\r\n\r\nexport const registerLoader = () => dispatch => {\r\n  dispatch({\r\n    type: REGISTER_LOADING_ACTION\r\n  });\r\n};\r\n\r\nexport const register = value => async dispatch => {\r\n  dispatch(registerLoader());\r\n  dispatch({\r\n    type: REGISTER_ERROR,\r\n    payload: null\r\n  });\r\n  try {\r\n    let res = await axios.post(\r\n      \"https://assignmentforoffice.herokuapp.com/api/users\",\r\n      value\r\n    );\r\n    console.log(res);\r\n    dispatch({\r\n      type: REGISTER_PROCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    localStorage.setItem(\"token\", res.data.token);\r\n    history.push(\"/\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REGISTER_ERROR,\r\n      payload: error.response.data.msg\r\n    });\r\n  }\r\n  dispatch(registerLoader());\r\n};\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as Actions from \"../store/actions\";\r\nimport { Navbar } from \"./Navbar/Navbar\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Main from \"./Main/Main\";\r\nimport { Login } from \"./Login/Login\";\r\nimport { Register } from \"./Register/Register\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst App = props => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector(({ itemReducer }) => itemReducer.loading);\r\n\r\n  useEffect(() => {\r\n    localStorage.getItem(\"token\") && dispatch(Actions.loggedIn());\r\n    console.log(\"gaaajnaj\");\r\n  });\r\n\r\n  return loading ? (\r\n    <h1>Loading.......</h1>\r\n  ) : (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path=\"/\" exact render={() => <Login />} />\r\n        <Route path=\"/main\" exact render={() => <Main />} />\r\n        <Route path=\"/register\" exact render={() => <Register />} />\r\n        <Route path=\"*\" exact render={() => <Register />} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default App;\r\n","import * as Actions from \"../actions\";\r\n\r\nconst initialState = {\r\n  isLoading: true,\r\n  items: null\r\n};\r\n\r\nconst itemReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Actions.GET_DATA:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        isLoading: false\r\n      };\r\n    case Actions.DELETE_ITEM:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(x => x._id != action.payload)\r\n      };\r\n    case Actions.ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        items: [...state.items, action.payload]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default itemReducer;\r\n","import * as Actions from \"../actions/index.js\";\r\nconst initialState = {\r\n  userData: null,\r\n  isAuth: false,\r\n  token: localStorage.getItem(\"token\"),\r\n  errormsg: null,\r\n  loading: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Actions.LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        userData: null,\r\n        token: null,\r\n        errormsg: action.payload\r\n      };\r\n    case Actions.LOGIN_PROCESS:\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n        userData: action.payload.user,\r\n        token: action.payload.token\r\n      };\r\n    case Actions.LOADING_ACTION:\r\n      return {\r\n        ...state,\r\n        loading: !state.loading\r\n      };\r\n    case Actions.LOGOUT_ACTION:\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        userData: null,\r\n        errormsg: null,\r\n        token: null\r\n      };\r\n    case Actions.KEEP_ME_LOGGED:\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n        userData: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport itemReducer from \"./reducers/item.reducer\";\r\nimport authReducer from \"./reducers/auth.reducer\";\r\nimport registerReducer from \"./reducers/auth.reducer\";\r\nimport tokenReducer from \"./reducers/auth.reducer\";\r\n\r\nexport default combineReducers({\r\n  itemReducer,\r\n  authReducer,\r\n  registerReducer,\r\n  tokenReducer\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Router } from \"react-router-dom\";\nimport thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./store/reducer\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(reducer, compose(applyMiddleware(thunk)));\n\nexport const history = createBrowserHistory();\nReactDOM.render(\n  <Router history={history}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}